version: 2.1

defaults: &defaults
  working_directory: ~/tomwells.org
  docker:
    - image: cimg/node:15.11-browsers
      user: root

jobs:
  build-and-deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - platform-patches-x
            - npm-install-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - build-{{ checksum "spago.dhall" }}-{{ checksum "packages.dhall" }}
      - run:
          # Need to install a tool called sysconfcpus to overwrite the number of
          # reported cpus - which purescript compiler uses (circleci reports 32, but
          # that is not true)
          name: Patch system - Build and install sysconfcpus, symlink libtinfo.so
          command: |
            if test -f "/usr/local/bin/sysconfcpus"; then
              echo "Already exists, skipping"
            else
              git clone https://github.com/obmarg/libsysconfcpus 
              cd libsysconfcpus && ./configure && make && sudo make install 
              cd ..
              rm -rf libsysconfcpus
            fi
      - save_cache:
          key: platform-patches-x
          paths:
            - /usr/local/bin/sysconfcpus
      - run:
          # Also...
          # Fix an issue with the purescript pre-compiled binary, which expects to find
          # a library called "libtinfo.so.5" - so we just hack it by symlinking to the newer
          # "libtinfo.so.6" which does exist
          command:
            sudo ln -s /usr/lib/x86_64-linux-gnu/libtinfo.so.6 /usr/lib/x86_64-linux-gnu/libtinfo.so.5
      - run:
          command: npm install
      - save_cache:
          key: npm-install-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          command: sysconfcpus -n 2 npm run build
      - save_cache:
          key: build-{{ checksum "spago.dhall" }}-{{ checksum "packages.dhall" }}
          paths:
            - .spago
            - output
      - run: 
          command: npm run bundle
      - run:
          command: npm run deploy
workflows:
  build:
    jobs:
      - build-and-deploy:
          context:
            - TOM-EC3-AWS
